@import '../../styles/tokens/colors';
@import '../../styles/tokens/typography';
@import '../../styles/tokens/spacing';
@import '../../styles/tokens/effects';

.container {
  display: flex;
  flex-direction: column;
  gap: $spacing-xs;
}

.label {
  color: $text;
  font-size: $font-size-body;
  font-weight: $font-weight-medium;
  line-height: $line-height-tight;
}

.required {
  margin-left: $spacing-xxs;
  color: $error;
}

.selectWrapper {
  position: relative;
  display: flex;
  align-items: center;

  &.sm {
    height: 32px;
  }

  &.md {
    height: 40px;
  }

  &.lg {
    height: 48px;
  }

  .icon {
    position: absolute;
    right: $spacing-sm;
    color: $text;
    pointer-events: none;
    transition: transform $transition-fast;
  }
}

.select {
  width: 100%;
  height: 100%;
  padding: 0 calc($spacing-xl + $spacing-sm) 0 $spacing-sm;
  border: $border-width-default solid $border;
  border-radius: $border-radius-default;
  background-color: $background;
  color: $text;
  font-size: $font-size-body;
  font-weight: $font-weight-regular;
  line-height: $line-height-relaxed;
  cursor: pointer;
  appearance: none;
  transition: all $transition-fast;

  &:hover:not(:disabled) {
    border-color: $primary;
  }

  &:focus {
    outline: none;
    border-color: $primary;
    box-shadow: $focus-ring;

    & + .icon {
      transform: rotate(180deg);
      color: $primary;
    }
  }

  &:disabled {
    background-color: $disabled;
    border-color: $border;
    color: $text-disabled;
    cursor: not-allowed;

    & + .icon {
      color: $text-disabled;
    }
  }

  option {
    color: $text;
    background-color: $background;

    &:disabled {
      color: $text-disabled;
    }
  }
}

.hint {
  color: $text-secondary;
  font-size: $font-size-small;
  line-height: $line-height-relaxed;
}

.error {
  .select {
    border-color: $error;

    &:focus {
      box-shadow: $focus-ring-error;
    }
  }

  .hint {
    color: $error;
  }
}
